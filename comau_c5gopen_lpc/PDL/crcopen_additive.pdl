PROGRAM crcopen_additive &PA
IMPORT 'crcopen_lib'
VAR vi_modality, vi_arm_idx, vi_timeout : INTEGER
VAR vi_enbl_addon_speed, vi_enbl_addon_current : INTEGER
VAR vi_res : INTEGER
VAR vs_modality : STRING[32]
BEGIN
  vi_timeout := 0
  vi_modality := CRCOPEN_LISTEN
  
  vi_enbl_addon_speed := 0   --enable speed addon 
  vi_enbl_addon_current := 0   --enable current addon
  
  vi_arm_idx := 1
  
  -- Enable Open Visual3D during simulation
  BIT_SET($GLOOP_ALONG_1D[20], 7)
  $ARM_OVR := 30
  --CYCLE
  vi_modality := CRCOPEN_POS_ADDITIVE
  MOVE JOINT TO {0, 0, -90, 0, 90, 0}
  MOVE JOINT TO {0, 20, -100, 0, 90, 0}
  MOVE JOINT TO {0, 40, -50, 0, 90, 0}
  MOVE JOINT TO {0, 0, -90, 0, 90, 0}
  MOVE JOINT TO {0, 40, -50, 0, 90, 0}
  MOVE JOINT TO {0, 20, -100, 0, 90, 0}
  MOVE JOINT TO {0, 0, -90, 0, 90, 0}
  DELAY 1000
  vi_res := ru_crcopen_set_modality(vi_arm_idx, 0x3F, vi_modality, vi_enbl_addon_speed, vi_enbl_addon_current)
  IF vi_res = 0 THEN
    WRITE LUN_CRT (' Arm ', vi_arm_idx, ' modality ', ru_crcopen_decode_modality(vi_modality), NL)
    DELAY 1000
    --    MOVE JOINT TO {10, 20, -80, 10, 20, 30}
    --    MOVE JOINT TO {10, 20, -100, 10, 20, 30}
    --    MOVE JOINT TO {10, 20, -90, 10, 20, 30}
    MOVE JOINT TO {0, 0, -90, 0, 90, 0}
    MOVE JOINT TO {0, 20, -100, 0, 90, 0}
    MOVE JOINT TO {0, 40, -50, 0, 90, 0}
    MOVE JOINT TO {0, 0, -90, 0, 90, 0}
    MOVE JOINT TO {0, 40, -50, 0, 90, 0}
    MOVE JOINT TO {0, 20, -100, 0, 90, 0}
    MOVE JOINT TO {0, 0, -90, 0, 90, 0}
    ru_crcopen_wait_exit(vi_arm_idx, vi_timeout, TRUE)
    DELAY 1000
  ELSE
    WRITE LUN_CRT (' END ', vi_res, NL)
    RETURN
  ENDIF
  
  DELAY 3000
END crcopen_additive
